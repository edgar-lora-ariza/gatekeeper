plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.vaadin' version '24.8.8'
}

group = 'com.bedrock'
version = '0.0.1-SNAPSHOT'
description = 'gatekeeper'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.20.1")
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'com.vaadin:vaadin-spring-boot-starter:24.9.3'

    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    implementation 'io.micrometer:micrometer-registry-otlp'
    implementation 'io.micrometer:context-propagation'
    implementation 'io.micrometer:micrometer-tracing'
    implementation 'io.micrometer:micrometer-java21'

    implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

    implementation 'org.bouncycastle:bcprov-jdk18on:1.78'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.77'

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2'
}

tasks.named('test', Test) {
    useJUnitPlatform()
}

vaadin {
    productionMode = true
}

tasks.named('bootRun') {
    jvmArgs = [
        '--add-opens=java.base/java.lang=ALL-UNNAMED',
        '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
        '--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED',
        '--add-exports=java.base/sun.misc=ALL-UNNAMED',
        '--enable-native-access=ALL-UNNAMED'
    ]
    
    systemProperty 'vaadin.productionMode', 'true'
    
    dependsOn 'vaadinBuildFrontend'
}
